{
  "name": "anysphere",
  "scripts": {
    "update": "cd ../../asphr && bazel build //schema:daemon_js_grpc && cd ../client/gui && rm -rf src/daemon && cp -r ../../asphr/bazel-bin/schema/daemon_js_grpc_pb src/daemon",
    "build-binaries-mac-arm64": "rm -rf binaries && bazel build //:asphr-release -c opt && mkdir binaries && cp $(bazel info output_path)/darwin_arm64-opt/bin/cli/asphr binaries/anysphere && cp $(bazel info output_path)/darwin_arm64-opt/bin/daemon/daemon binaries/anysphered",
    "build-binaries-mac-x86_64": "rm -rf binaries && arch --x86_64 /usr/local/bin/bazel build //:asphr-release -c opt && mkdir binaries && cp $(bazel info output_path)/darwin-opt/bin/cli/asphr binaries/anysphere && cp $(bazel info output_path)/darwin-opt/bin/daemon/daemon binaries/anysphered",
    "build": "concurrently \"npm run build:main\" \"npm run build:renderer\"",
    "build:main": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./helpers/configs/webpack.config.main.prod.ts",
    "build:renderer": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./helpers/configs/webpack.config.renderer.prod.ts",
    "rebuild": "electron-rebuild --parallel --types prod,dev,optional --module-dir release/app",
    "clean-build": "ts-node ./helpers/scripts/clean.js dist && rm -rf ./release/build",
    "package-prepare-mac-arm64": "npm run build-binaries-mac-arm64 && npm run clean-build && npm run build",
    "package-prepare-mac-x86_64": "npm run build-binaries-mac-x86_64 && npm run clean-build && npm run build",
    "package-mac-arm64": "npm run package-prepare-mac-arm64 && MAC_ARCH=arm64 ts-node ./helpers/scripts/package-mac.ts",
    "package-mac-x86_64": "npm run package-prepare-mac-x86_64 && MAC_ARCH=x64 ts-node ./helpers/scripts/package-mac.ts",
    "postinstall": "ts-node helpers/scripts/check-native-dep.js && electron-builder install-app-deps && cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack --config ./helpers/configs/webpack.config.renderer.dev.dll.ts",
    "start": "ts-node ./helpers/scripts/check-port-in-use.js && npm run start:renderer",
    "start:main": "cross-env NODE_ENV=development electron -r ts-node/register/transpile-only ./src/main/main.ts",
    "start:renderer": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack serve --config ./helpers/configs/webpack.config.renderer.dev.ts"
  },
  "devDependencies": {
    "@pmmmwh/react-refresh-webpack-plugin": "0.5.4",
    "@types/node": "17.0.5",
    "@types/react": "^17.0.38",
    "@types/react-dom": "^17.0.11",
    "@types/react-test-renderer": "^17.0.1",
    "@types/webpack-env": "^1.16.3",
    "@vscode/codicons": "^0.0.27",
    "chalk": "^4.1.2",
    "concurrently": "^6.5.1",
    "cross-env": "^7.0.3",
    "css-loader": "^6.5.1",
    "css-minimizer-webpack-plugin": "^3.3.1",
    "detect-port": "^1.3.0",
    "electron": "^16.0.5",
    "electron-builder": "22.13.1",
    "electron-devtools-installer": "^3.2.0",
    "electron-notarize": "^1.1.1",
    "electron-rebuild": "^3.2.5",
    "html-webpack-plugin": "^5.5.0",
    "mini-css-extract-plugin": "^2.4.5",
    "postcss-loader": "^6.2.1",
    "prettier": "^2.5.1",
    "react-refresh": "^0.11.0",
    "react-refresh-typescript": "^2.0.3",
    "react-test-renderer": "^17.0.2",
    "rimraf": "^3.0.2",
    "style-loader": "^3.3.1",
    "tailwindcss": "^3.0.13",
    "ts-loader": "^9.2.6",
    "ts-node": "^10.4.0",
    "typescript": "^4.5.4",
    "url-loader": "^4.1.1",
    "webpack": "^5.65.0",
    "webpack-cli": "^4.9.1",
    "webpack-dev-server": "^4.7.1",
    "webpack-merge": "^5.8.0"
  },
  "dependencies": {
    "@grpc/grpc-js": "^1.5.0",
    "google-protobuf": "^3.19.3",
    "match-sorter": "^6.3.1",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-virtual": "^2.10.4",
    "tiny-invariant": "^1.2.0"
  },
  "devEngines": {
    "node": ">=14.x",
    "npm": ">=7.x"
  }
}
