/*******************************************************************************
 * CLI - A simple command line interface.
 * Copyright (C) 2016-2021 Daniele Pallastrelli
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

#include <cli/cli.h>
#include <cli/clifilesession.h>
#include <cli/loopscheduler.h>

#include "cli/clilocalsession.h"

using MainScheduler = cli::LoopScheduler;
#include <fstream>

using namespace cli;
using std::make_unique;
using std::string;

int main() {
  // setup cli

  auto rootMenu = make_unique<Menu>("anysphere");

  rootMenu->Insert(
      "menu", [](std::ostream& out) { out << "Hello, world\n"; },
      "The Anysphere menu");
  rootMenu->Insert(
      "message",
      [](std::ostream& out, string x) {
        out << "Send a message to friend: " << x << " :)\n";
        // show messages from friend x
      },
      "Open a text meny to message a friend.");
  rootMenu->Insert(
      "color",
      [](std::ostream& out) {
        out << "Colors ON\n";
        SetColor();
      },
      "Enable colors in the cli");
  rootMenu->Insert(
      "nocolor",
      [](std::ostream& out) {
        out << "Colors OFF\n";
        SetNoColor();
      },
      "Disable colors in the cli");

  auto messageMenu = make_unique<Menu>("message");
  messageMenu->Insert(
      "friend",
      [](std::ostream& out, string friend_name) {
        out << "Send a message to friend: " << friend_name << " :)";
        out << "Press Esc or type 'anysphere' to go to your main inbox.\n";
      },
      "Open a text menu to message a friend.");

  auto inboxMenu = make_unique<Menu>("inbox");
  inboxMenu->Insert(
      "friend",
      [](std::ostream& out, string friend_name) {
        out << "Showing messages from your friend " << friend_name << "\n";
        out << "Press Esc or type 'anysphere' to go to your main inbox.\n";
        // go to the main inbox.
      },
      "Show the messages from a friend");
  //   inboxMenu->Insert(
  //       "back",
  //       [](std::ostream& out) {
  //         out << "Going back to the main inbox\n";
  //         // go to the main inbox.
  //       },
  //       "Go back to the main inbox");

  rootMenu->Insert(std::move(messageMenu));
  rootMenu->Insert(std::move(inboxMenu));

  Cli cli(std::move(rootMenu));
  SetColor();

  // global exit action
  cli.ExitAction([](auto& out) {
    out << "Goodbye! We hope you are enjoying anysphere!\n";
  });

  MainScheduler scheduler;
  CliLocalTerminalSession localSession(cli, scheduler, std::cout, 200);
  localSession.ExitAction([&scheduler](auto& out) {
    out << "Closing App...\n";
    scheduler.Stop();
  });

  scheduler.Run();

  return 0;
}
